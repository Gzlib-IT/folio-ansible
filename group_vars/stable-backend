---
# Variables for building backend
auth_required: true
total_records_key: totalRecords
loan_action: true
load_addresstypes: true

folio_modules:
  - index: 0
    name: mod-authtoken
    module_id: authtoken-module
    version: 0.6.1
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    okapi_docker_pull: "false"

  - index: 1
    name: mod-permissions
    module_id: permissions-module
    version: 4.0.4
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 2
    name: mod-login
    module_id: login-module
    version: 3.1.0
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    docker_cmd:
      - "verify.user=true"
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 3
    name: mod-configuration
    module_id: configuration
    version: 2.0.0
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"
    
  - index: 4
    name: mod-users
    version: 14.2.0
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 5
    name: mod-users-bl
    version: 2.0.2
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    okapi_docker_pull: "false"

  - index: 6
    name: mod-inventory-storage
    module_id: inventory-storage
    version: 5.1.0
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 7
    name: mod-inventory
    module_id: inventory
    version: 5.1.0
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    docker_env:
      - { name: JAVA_OPTS, value: "-Dorg.folio.metadata.inventory.storage.type=okapi" }
    okapi_docker_pull: "false"

  - index: 8
    name: mod-circulation-storage
    module_id: circulation-storage
    version: 3.2.0
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 9
    name: mod-circulation
    module_id: circulation
    version: 4.3.0
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    okapi_docker_pull: "false"

  - index: 10
    name: mod-notes
    version: 0.2.0
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 11
    name: mod-notify
    version: 0.1.1
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com:9130
    image_repository: folioorg
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

# UI build will use stripes-demo-platform per defaults in stripes-docker role
okapi_register_modules: true
stripes_strict_md: true

# Metadata for CI build
version: 3.6.0
version_descr: |
  Admin login: diku_admin/admin

  Changes since v3.5.0:
  * Update Okapi to v1.10.0
  * Add mod-notify v0.1.1
