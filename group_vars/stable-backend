---
# Variables for building backend
auth_required: true
total_records_key: totalRecords
loan_action: true
load_addresstypes: true

folio_modules:
  - index: 0
    name: mod-authtoken
    mod_descriptor_url: https://cdn.rawgit.com/folio-org/mod-authtoken/v0.6.1/ModuleDescriptor.json
    image_repository: folioorg
    image_version: v0.6.1
    okapi_docker_pull: "false"

  - index: 1
    name: mod-permissions
    mod_descriptor_url: https://cdn.rawgit.com/folio-org/mod-permissions/v4.0.4/ModuleDescriptor.json
    image_repository: folioorg
    image_version: v4.0.4
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 2
    name: mod-login
    mod_descriptor_url: https://cdn.rawgit.com/folio-org/mod-login/v3.1.0/ModuleDescriptor.json
    image_repository: folioorg
    image_version: v3.1.0
    docker_cmd:
      - "verify.user=true"
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 3
    name: mod-configuration
    mod_descriptor_url: https://cdn.rawgit.com/folio-org/mod-configuration/v2.0.0/ModuleDescriptor.json
    image_repository: folioorg
    image_version: v2.0.0
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"
    
  - index: 4
    name: mod-users
    mod_descriptor_url: https://cdn.rawgit.com/folio-org/mod-users/v14.1.0/ModuleDescriptor.json
    image_version: v14.1.0
    image_repository: folioorg
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 5
    name: mod-users-bl
    mod_descriptor_url: https://cdn.rawgit.com/folio-org/mod-users-bl/v2.0.0/ModuleDescriptor.json
    image_version: v2.0.0
    image_repository: folioorg
    okapi_docker_pull: "false"

  - index: 6
    name: mod-inventory-storage
    mod_descriptor_url: https://cdn.rawgit.com/folio-org/mod-inventory-storage/v5.0.0/ModuleDescriptor.json
    image_version: v5.0.0
    image_repository: folioorg
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 7
    name: mod-inventory
    mod_descriptor_url: https://cdn.rawgit.com/folio-org/mod-inventory/v5.0.0/ModuleDescriptor.json
    image_version: v5.0.0
    image_repository: folioorg
    docker_env:
      - { name: JAVA_OPTS, value: "-Dorg.folio.metadata.inventory.storage.type=okapi" }
    okapi_docker_pull: "false"

  - index: 8
    name: mod-circulation-storage
    mod_descriptor_url: https://cdn.rawgit.com/folio-org/mod-circulation-storage/v3.1.0/ModuleDescriptor.json
    image_version: v3.1.0
    image_repository: folioorg
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 9
    name: mod-circulation
    mod_descriptor_url: https://cdn.rawgit.com/folio-org/mod-circulation/v4.1.0/ModuleDescriptor.json
    image_version: v4.1.0
    image_repository: folioorg
    okapi_docker_pull: "false"

# UI build will use stripes-demo-platform per defaults in stripes-docker role
okapi_register_modules: true
stripes_strict_md: true

# Metadata for CI build
version: 2.2.0
version_descr: |
  Admin login: diku_admin/admin

  Changes from v2.1.0:
  * Update Okapi to v1.8.1 (internal module, okapi.supertenant)
  * Update mod-authtoken to v0.6.1 (support for X-Okapi headers)
  * Update mod-permissions to v4.0.4  
  * Update mod-login to v3.1.0 (improvements to token generation)
  * Update mod-users to v14.1.0 (cross-table queries and joins)
  * Update mod-circulation-storage to v3.1.0 (add dueDate and renewalCount properties)
  * Update mod-circulation to v4.1.0 (add dueDate property)
  * Updated sample data for circulation (dueDate, renewalCount)
