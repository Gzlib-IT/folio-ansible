---
# Variables for building testing/testing-backend
auth_required: true
total_records_key: totalRecords
load_addresstypes: true
inv_storage_3: true
hierarchical_locations: true
load_mods_larger: true
shelf_locations: false
enable_okapi: true

# used in okapi-tenant-deploy
update_launch_descr: true

# set the default postgres connection pool per module/tenant
pg_max_pool_size: 5

folio_modules:
  - name: mod-authtoken
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-permissions
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx512m" }
    deploy: yes

  - name: mod-login
    docker_cmd:
      - "verify.user=true"
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-configuration
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-users
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx384m" }
    deploy: yes

  - name: mod-inventory-storage
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx512m" }
    deploy: yes

  - name: mod-users-bl
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-login-saml
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-user-import
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-inventory
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Dorg.folio.metadata.inventory.storage.type=okapi" }
    deploy: yes

  - name: mod-circulation-storage
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-circulation
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-notify
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-notes
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-graphql
    deploy: yes

  - name: mod-codex-inventory
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-codex-ekb
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-codex-mux
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-kb-ebsco
    docker_env:
      - { name: 'EBSCO_RMAPI_BASE_URL', value: 'https://sandbox.ebsco.io' }
    deploy: yes

  - name: mod-vendors
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-calendar
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes
    
  - name: mod-finance
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes
    
  - name: mod-feesfines
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-tags
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-orders-storage
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - name: mod-rtac
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    deploy: yes

  - index: 26
    name: mod-template-engine
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com
    image_repository: folioci
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
      - { name: db.maxPoolSize, value: "{{ pg_max_pool_size }}" }
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 27
    name: mod-password-validator
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com
    image_repository: folioci
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
      - { name: db.maxPoolSize, value: "{{ pg_max_pool_size }}" }
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 28
    name: mod-audit
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com
    image_repository: folioci
    okapi_docker_pull: "false"
    docker_env:
      - { name: db.host, value: "{{ module_pg_host }}" }
      - { name: db.port, value: "{{ pg_port }}" }
      - { name: db.username, value: "{{ pg_admin_user }}" }
      - { name: db.password, value: "{{ pg_admin_password }}" }
      - { name: db.database, value: "{{ module_database }}" }
      - { name: db.maxPoolSize, value: "{{ pg_max_pool_size }}" }
      - { name: JAVA_OPTIONS, value: "-Xmx512m" }
    storage: postgres
    database: "{{ module_database }}"
    pg_user: "{{ pg_admin_user }}"
    pg_password: "{{ pg_admin_password }}"
    okapi_docker_pull: "false"

  - index: 29
    name: mod-audit-filter
    mod_descriptor_repo: http://folio-registry.aws.indexdata.com
    image_repository: folioci
    okapi_docker_pull: "false"
    docker_env:
      - { name: JAVA_OPTIONS, value: "-Xmx256m" }

# Variables for building UI
stripes_github_project: https://github.com/folio-org/folio-testing-platform
folio_npm_repo: npm-folioci
platform_remove_lock: true
# mod descrs are built by `yarn install` in folio-testing-platform
build_module_descriptors: false
okapi_register_modules: true
okapi_enable_modules: true
node_environment:
  NODE_ENV:

# Metadata for CI build
version: 5.0.0
