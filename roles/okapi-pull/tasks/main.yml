---
# Authenticate to supertenant if required
- name: login to supertenant if authn interface exists
  uri:
    url: "{{ okapi_url }}/authn/login"
    method: POST
    headers:
      X-Okapi-Tenant: "supertenant"
      Accept: application/json
    body_format: json
    body: "{'username': '{{ superuser_username }}', 'password': '{{ superuser_password }}' }"
    status_code: 201, 404
  register: login_result
  when: supertenant_token is not defined

- name: Set Okapi token if supertenant is secured
  set_fact:
    supertenant_token: "{{ login_result['x_okapi_token'] }}"
  when: login_result.status is defined and login_result.status == 201

# Role to pull module descriptors from a central repo

# wait a few seconds to make sure okapi is up
- wait_for: timeout=10

- name: Pull module descriptors
  uri:
    url: "{{ okapi_url }}/_/proxy/pull/modules"
    headers:
      headers:
      X-Okapi-Tenant: "supertenant"
      Accept: application/json
      X-Okapi-Token: "{{ supertenant_token | default('') }}"
    body_format: json
    method: POST
    body: "{{ mod_descr_repos }}"
    timeout: "{{ okapi_pull_timeout }}"
  register: okapi_pull
  changed_when: okapi_pull.json is defined and okapi_pull.json
