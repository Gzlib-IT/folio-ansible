---

- name: create docker build dir
  become: yes
  file: 
    path: "{{ stripes_conf_dir }}"
    state: directory

- name: generate templates and copy to build dir
  become: yes
  template: 
    src: "{{ item.src }}"
    dest: "{{ stripes_conf_dir }}/{{ item.dest }}"
  with_items: 
    - { src: 'stripes.config.js.j2', dest: 'stripes.config.js' }
    - { src: 'package.json.j2', dest: 'package.json' }
  when: with_github == false

- name: copy stripes platform files from github project
  become: yes
  git: 
    repo: "{{ stripes_github_project }}"
    dest: "{{ stripes_conf_dir }}"
  when: with_github == true

- name: set okapi url in stripes config
  become: yes
  replace: 
    name: "{{ stripes_conf_dir }}/stripes.config.js"
    regexp: >- 
       ('url':\s*'?)http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+('.*)$
    replace: >-
       \1{{ stripes_okapi_url }}\2
  when: with_github == true

- name: set tenant in stripes config
  become: yes
  replace: 
    name: "{{ stripes_conf_dir }}/stripes.config.js"
    regexp: >-
      ('tenant':\s*'?)[A-Za-z0-9\-]+('.*)$
    replace: >-
      \1{{ stripes_tenant }}\2 
  when: with_github == true

- name: copy Dockerfile to stripes conf dir
  become: yes
  copy: 
    src: Dockerfile
    dest: "{{ stripes_conf_dir }}/Dockerfile"

- name: copy npmrc configuration 
  become: yes
  template: 
    src: "{{ item.src }}"
    dest: "{{ stripes_conf_dir }}/{{ item.dest }}"
  with_items:
    - { src: 'npmrc.j2', dest: 'npmrc' }
  
- name: create docker network for stripes
  become: yes
  docker_network: 
    name: stripes-net

- name: build and start stripes docker container
  become: yes
  docker_service:
    project_name: stripes
    definition: 
      version: '2'
      services: 
        stripes:
          build: "{{ stripes_conf_dir }}"
          image: stripes
          environment: 
            - STRIPES_HOST=0.0.0.0
          ports: 
            - "{{ stripes_host_address }}:3000:3000"
          networks:  
            stripes-net:
              aliases:
                - stripes-serv
          restart: always
      networks: 
        stripes-net: 
          external: true
    state: present
  register: stripes_container_status

- debug: 
    var: stripes_container_status

  # set up nginx proxy if with_nginx is 'true'.       
- include: nginx.yml
  when: with_nginx == true
