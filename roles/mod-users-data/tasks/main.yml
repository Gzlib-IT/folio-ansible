---
# Role to enable mod-users for the sample tenant and load sample data

# wait a few seconds to make sure modules are spun up
- wait_for: timeout=10

- name: Check tenant mod-authtoken registration
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/diku/modules/authtoken-module"
    status_code: 200, 404
  register: tenant_mod_authtoken

- name: Check tenant mod-user registration
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/diku/modules/users-module"
    status_code: 200, 404
  register: tenant_mod_users

- name: Enable mod-users module for tenant
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/diku/modules"
    method: POST
    body_format: json
    body: '{ "id" : "users-module" }'
    status_code: 201
  register: mod_users_enable
  changed_when: mod_users_enable.status == 201
  when: tenant_mod_users.status == 404

- name: Login as {{ admin_user.username }}
  uri:
    url: "{{ okapi_url }}/authn/login"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
    body: "{ 'username' : '{{ admin_user.username }}', 'password' : '{{ admin_user.password }}' }"
    status_code: 201
  register: mod_users_login
  when: auth_required and tenant_mod_authtoken.status == 200

# 422 error means the user is already there
- name: Load users
  uri:
    url: "{{ okapi_url }}/users"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
      X-Okapi-Token: "{{ mod_users_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201,422
  register: load_user
  changed_when: load_user.status == 201
  with_fileglob:
    - "*.json"

- name: Get user groups
  uri:
    url: "{{ okapi_url }}/groups"
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
      X-Okapi-Token: "{{ mod_users_login.x_okapi_token | default('token') }}"
  register: usergroups

- name: Load groups if needed
  uri:
    url: "{{ okapi_url }}/groups"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
      X-Okapi-Token: "{{ mod_users_login.x_okapi_token | default('token') }}"
    body: '{ "group" : "{{ item.group }}", "desc" : "{{ item.desc }}" }'
    status_code: 201,422
  register: load_group
  changed_when: load_group.status == 201
  with_items: "{{ patron_groups }}"
  when: usergroups.json.usergroups == []

- name: Get user groups (again)
  uri:
    url: "{{ okapi_url }}/groups"
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
      X-Okapi-Token: "{{ mod_users_login.x_okapi_token | default('token') }}"
  register: usergroups

- name: Get users
  uri:
    url: "{{ okapi_url }}/users?limit=100"
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
      X-Okapi-Token: "{{ mod_users_login.x_okapi_token | default('token') }}"
  register: users

# Returns 422 error on duplicate assignment
- name: Associate users with usergroups
  uri:
    url: "{{ okapi_url }}/groups/{{ (usergroups.json.usergroups|random).id }}/users/{{ item.id }}"
    method: PUT
    headers:
      X-Okapi-Tenant: diku
      Accept: text/plain
      X-Okapi-Token: "{{ mod_users_login.x_okapi_token | default('token') }}"
    status_code: 204, 422
  register: group_user
  changed_when: group_user.status == 204
  with_items: "{{ users.json.users }}"
