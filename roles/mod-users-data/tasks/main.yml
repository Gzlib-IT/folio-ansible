---
# Role to enable mod-users for the sample tenant and load sample data

# wait a few seconds to make sure modules are spun up
- wait_for: timeout=5

- name: Login as {{ admin_user.username }}
  uri:
    url: "{{ okapi_url }}/authn/login"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
    body: "{ 'username' : '{{ admin_user.username }}', 'password' : '{{ admin_user.password }}' }"
    status_code: 201
  register: tenant_admin_login
  when: auth_required


# 422 error means the group is already there
- name: Load groups reference data
  uri:
    url: "{{ okapi_url }}/groups"
    method: POST
    body_format: json
    headers:
      Authtoken-Refresh-Cache: "true"
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201,422
  register: load_group
  changed_when: load_group.status == 201
  with_fileglob:
    - groups/*.json

# There is no unique constraint, so duplicate address type records can be loaded willy-nilly
# So need to check if they are already there
# need to get address type UUIDs for user generation
- name: Get address types
  uri:
    url: "{{ okapi_url }}/addresstypes"
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
  register: addresstypes
  when: load_addresstypes == true

- name: Load address types
  uri:
    url: "{{ okapi_url }}/addresstypes"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201
  register: load_group
  changed_when: load_group.status == 201
  when: load_addresstypes == true and addresstypes.json.totalRecords == 0
  with_fileglob:
    - addresstypes/*.json

- name: Generate users
  include: gen-users.yml
  when: mod_users_ref_only == false
