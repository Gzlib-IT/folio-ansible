---
# Role to enable mod-metadata modules for the sample tenant and load
# sample data
# wait a few seconds to make sure modules are spun up
- wait_for: timeout=5

- name: Login as {{ admin_user.username }}
  uri:
    url: "{{ okapi_url }}/authn/login"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
    body: "{ 'username' : '{{ admin_user.username }}', 'password' : '{{ admin_user.password }}' }"
    status_code: 201
  register: tenant_admin_login
  when: auth_required

- name: Grant additional permissions to {{ admin_user.username }} (auth by username)
  uri:
    url: "{{ okapi_url }}/perms/users/{{ admin_user.username }}/permissions"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token }}"
      Accept: application/json
    body: '{ "permissionName" : "{{ item }}" }'
    status_code: 200,422
  register: admin_perms
  changed_when: admin_perms.status == 200
  with_items: "{{ inventory_admin_permissions }}"
  when: auth_required and auth_by_username and not top_down_install

- name: Grant additional permissions to {{ admin_user.username }} (auth by id)
  uri:
    url: "{{ okapi_url }}/perms/users/{{ admin_user.perms_user_id }}/permissions"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token }}"
      Accept: application/json
    body: '{ "permissionName" : "{{ item }}" }'
    status_code: 200,422
  register: admin_perms
  changed_when: admin_perms.status == 200
  with_items: "{{ inventory_admin_permissions }}"
  when: auth_required and not auth_by_username and not top_down_install

# fails with 400 or 422 error if already loaded
- name: Load inventory storage classification types
  uri:
    url: "{{ okapi_url }}/classification-types"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 400, 422
  register: load_classtype
  changed_when: load_classtype.status == 201
  with_fileglob:
    - classificationtypes/*.json
  when: inv_storage_3 and load_class_types

# fails with 400 or 422 error if already loaded
- name: Load inventory storage contributor name types
  uri:
    url: "{{ okapi_url }}/contributor-name-types"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 400, 422
  register: load_contribnametype
  changed_when: load_contribnametype.status == 201
  with_fileglob:
    - contributornametypes/*.json
  when: inv_storage_3 and load_name_types

# fails with 400 or 422 error if already loaded
- name: Load inventory storage contributor types
  uri:
    url: "{{ okapi_url }}/contributor-types"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 400, 422
  register: load_contribtype
  changed_when: load_contribtype.status == 201
  with_fileglob:
    - contributortypes/*.json
  when: inv_storage_3 and load_contrib_types

# fails with 400 or 422 error if already loaded
- name: Load inventory storage identifier types
  uri:
    url: "{{ okapi_url }}/identifier-types"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 400, 422
  register: load_idtype
  changed_when: load_idtype.status == 201
  with_fileglob:
    - identifiertypes/*.json
  when: inv_storage_3 and load_id_types

# fails with 400 or 422 error if already loaded
- name: Load inventory storage instance formats
  uri:
    url: "{{ okapi_url }}/instance-formats"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 400, 422
  register: load_instformat
  changed_when: load_instformat.status == 201
  with_fileglob:
    - instanceformats/*.json
  when: inv_storage_3 and load_instance_formats

# fails with 400 or 422 error if already loaded
- name: Load inventory storage instance types
  uri:
    url: "{{ okapi_url }}/instance-types"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 400, 422
  register: load_insttype
  changed_when: load_insttype.status == 201
  with_fileglob:
    - instancetypes/*.json
  when: inv_storage_3 and load_instance_types

# fails with 400 if already loaded
- name: Load inventory storage loan types
  uri:
    url: "{{ okapi_url }}/loan-types"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 400
  register: load_ltype
  changed_when: load_ltype.status == 201
  with_fileglob:
    - loantypes/*.json

# fails with 422 error if already loaded
- name: Load inventory storage material types
  uri:
    url: "{{ okapi_url }}/material-types"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 422
  register: load_mtype
  changed_when: load_mtype.status == 201
  with_fileglob:
    - mtypes/*.json

# fails with 400 or 422 error if already loaded
- name: Load inventory storage platforms
  uri:
    url: "{{ okapi_url }}/platforms"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 400, 422
  register: load_platform
  changed_when: load_platform.status == 201
  with_fileglob:
    - platforms/*.json
  when: inv_storage_3 and load_platforms

# fails with 422 error if already loaded
- name: Load inventory storage shelf locations
  uri:
    url: "{{ okapi_url }}/shelf-locations"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 422
  register: load_shelfloc
  changed_when: load_shelfloc.status == 201
  with_fileglob:
    - shelf-locations/*.json
  when: inv_storage_3 and shelf_locations

# fails with 422 error if already loaded
- name: Load inventory storage institutions
  uri:
    url: "{{ okapi_url }}/location-units/institutions"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 422
  register: load_locinst
  changed_when: load_locinst.status == 201
  with_fileglob:
    - location-units/institutions/*.json
  when: inv_storage_3 and hierarchical_locations

# fails with 422 error if already loaded
- name: Load inventory storage campuses
  uri:
    url: "{{ okapi_url }}/location-units/campuses"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 422
  register: load_loccamp
  changed_when: load_loccamp.status == 201
  with_fileglob:
    - location-units/campuses/*.json
  when: inv_storage_3 and hierarchical_locations

# fails with 422 error if already loaded
- name: Load inventory storage libraries
  uri:
    url: "{{ okapi_url }}/location-units/libraries"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 422
  register: load_loclib
  changed_when: load_loclib.status == 201
  with_fileglob:
    - location-units/libraries/*.json
  when: inv_storage_3 and hierarchical_locations

# fails with 422 error if already loaded
- name: Load inventory storage locations
  uri:
    url: "{{ okapi_url }}/locations"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 422
  register: load_location
  changed_when: load_location.status == 201
  with_fileglob:
    - locations/*.json
  when: inv_storage_3 and hierarchical_locations

# fails with 422 error if already loaded
- name: Load inventory storage service points
  uri:
    url: "{{ okapi_url }}/service-points"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: application/json
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 422
  register: load_service_point
  changed_when: load_service_point.status == 201
  with_fileglob:
    - service-points/*.json
  when: inv_storage_3 and load_service_points

- name: Load sample data
  include: sample-data.yml
  when: mod_inventory_ref_only == false

- meta: flush_handlers
