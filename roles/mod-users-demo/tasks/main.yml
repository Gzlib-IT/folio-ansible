---
# Role to deploy a mod-users server from compiled source to a Debian Jessie box
- name: Set up mod-users home directory
  become: yes
  file: state=directory path={{ item }}
  with_items:
    - "{{ mod_users_home }}/lib"
    - "{{ mod_users_home }}/conf"

- name: Link in mod-users jar
  become: yes
  file: state=link src={{ mod_users_src_home }}/target/mod-users-fat.jar path={{ mod_users_home }}/lib/mod-users-fat.jar

- name: Link in logging configuration
  become: yes
  file: state=link src={{ mod_users_src_home }}/target/classes/vertx-default-jul-logging.properties path={{ mod_users_home }}/conf/vertx-default-jul-logging.properties

- name: Copy mongo configuration
  become: yes
  copy: src=mongo-conf.json dest={{ mod_users_home }}/conf/mongo-conf.json

- name: Check mod-users module registration
  uri:
    url: "{{ okapi_url }}_/proxy/modules/mod-users"
    status_code: 200, 404
  register: mod_users_reg_status

- name: Register mod-users module
  uri:
    url: "{{ okapi_url }}_/proxy/modules"
    method: POST
    body_format: json
    body: "{{ lookup('file', 'ModuleDescriptor.json') }}"
    status_code: 201
  when: mod_users_reg_status.status == 404
  register: mod_users_reg
  changed_when: "mod_users_reg.status == 201"

- name: Check mod-users module deployment
  uri:
    url: "{{ okapi_url }}_/discovery/modules/mod-users"
    status_code: 200, 404
  register: mod_users_deploy_status

- name: Deploy mod-users module
  uri:
    url: "{{ okapi_url }}_/discovery/modules"
    method: POST
    HEADER_Content-Type: application/json
    body: '{ "srvcId" : "mod-users", "nodeId" : "localhost" }'
    status_code: 201
  when: mod_users_deploy_status.status == 404
  register: mod_users_deploy
  changed_when: "mod_users_deploy.status == 201"

