---
# Role to deploy an Okapi server from source to a Debian Jessie box
- name: Install prereqs
  become: yes
  apt: name={{ item }} state=present
  with_items:
    - git
    - curl

- name: Copy Okapi service file
  become: yes
  copy: src=okapi.service dest=/etc/systemd/system/okapi.service
  notify:
    - systemctl daemon-reload 
    - Restart Okapi

- name: Enable Okapi service
  become: yes
  service: name=okapi enabled=yes

- name: Clone Okapi repository
  become: yes
  git: repo=https://github.com/folio-org/okapi.git dest={{ okapi_src_home }}
  register: okapi_clone

- name: Force Maven build if repository updated
  become: yes
  file: path={{ okapi_src_home }}/install.log state=absent
  when: okapi_clone.changed

- name: See if Okapi will need to be built
  stat: path={{ okapi_src_home }}/install.log
  register: okapi_build_stat

- name: Stop Okapi service if repository updated or if build required
  become: yes
  service: name=okapi state=stopped
  when: okapi_clone.changed or okapi_build_stat.stat.isreg is not defined

- name: Build Okapi
  become: yes
  shell: /usr/bin/mvn -q clean install > install.log
  args:
    chdir: "{{ okapi_src_home }}"
    creates: "{{ okapi_src_home }}/install.log"
  notify: Restart Okapi

- name: Set up Okapi home directory
  become: yes
  file: state=directory path={{ item }}
  with_items:
    - /opt/okapi/lib
    - /opt/okapi/conf

- name: Link in Okapi jar
  become: yes
  file: state=link src={{ okapi_src_home }}/okapi-core/target/okapi-core-fat.jar path={{ okapi_home }}/lib/okapi-core-fat.jar
  notify: Restart Okapi

- name: Check okapi service status
  become: yes
  command: systemctl status okapi
  ignore_errors: yes
  changed_when: no
  register: okapi_status

- name: Notify handler if okapi is down
  debug: msg="Setting Okapi to restart"
  when: okapi_status | failed
  changed_when: yes
  notify: Restart Okapi
