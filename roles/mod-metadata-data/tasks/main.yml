---
# Role to enable mod-metadata modules for the sample tenant and load
# sample data
# wait a few seconds to make sure modules are spun up
- wait_for: timeout=10

- name: Check tenant registration
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/diku/modules/{{ item.module }}"
    status_code: 200, 404
  register: tenant_mod_metadata
  with_items: "{{ mod_metadata_modules }}"

- name: Enable mod-metadata modules for tenant
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/diku/modules"
    method: POST
    body_format: json
    body: '{ "id" : "{{ item.module }}" }'
    status_code: 201
  register: mod_metadata_enable
  changed_when: mod_metadata_enable.status == 201
  when: tenant_mod_metadata.results[item.index].status == 404
  with_items: "{{ mod_metadata_modules }}"

- name: Check for sample instances
  uri:
    url: "{{ okapi_url }}/instance-storage/instances"
    headers:
      Content-Type: application/json
      X-Okapi-Tenant: diku
      Accept: application/json
  register: inventory_instances

- name: Check for sample items
  uri:
    url: "{{ okapi_url }}/item-storage/items"
    headers:
      Content-Type: application/json
      X-Okapi-Tenant: diku
      Accept: application/json
  register: inventory_items

- name: Load inventory storage instances
  uri:
    url: "{{ okapi_url }}/instance-storage/instances"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
    body: "{{ lookup('file', item) }}"
    status_code: 201
  register: load_instance
  changed_when: load_instance.status == 201
  when: inventory_instances.json.totalRecords == 0
  with_fileglob:
    - instances/*.json
  
- name: Load inventory storage items
  uri:
    url: "{{ okapi_url }}/item-storage/items"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
    body: "{{ lookup('file', item) }}"
    status_code: 201
  register: load_item
  changed_when: load_item.status == 201
  when: inventory_items.json.totalRecords == 0
  with_fileglob:
    - items/*.json

- name: Copy sample MODS data
  become: yes
  copy: src=multiple-mods-records.xml dest=/etc/.mod-metadata-mods_ansible.xml
  register: mods_sample

- name: Load sample data from MODS ingest
  command: "/usr/bin/curl -X POST -H 'Content-type: multipart/form-data' -H 'X-Okapi-Tenant: diku' -F upload=@/etc/.mod-metadata-mods_ansible.xml {{ okapi_url }}/inventory/ingest/mods"
  when: mods_sample.changed

