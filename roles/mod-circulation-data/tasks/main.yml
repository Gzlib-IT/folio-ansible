---
# Role to enable mod-circulation for the sample tenant and load sample data

# wait a few seconds to make sure modules are spun up
- wait_for: timeout=10

- set_fact: mod_circulation_modules=[]

- set_fact:
    mod_circulation_modules: "{{ mod_circulation_modules }} + {{ okapi_modules|selectattr('id','match','^'+item+'(-[0-9].*)?$')|list }}"
  with_items: "{{ mod_circulation_prefixes }}"

- name: Check tenant registration
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/diku/modules/{{ item.id }}"
    status_code: 200, 404
  register: tenant_mod_circulation
  with_items: "{{ mod_circulation_modules }}"

- name: Enable mod-circulation modules for tenant
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/diku/modules"
    method: POST
    body_format: json
    body: '{ "id" : "{{ item.1.id }}" }'
    status_code: 201
  register: mod_circulation_enable
  changed_when: mod_circulation_enable.status == 201
  when: tenant_mod_circulation.results[item.0].status == 404
  with_indexed_items: "{{ mod_circulation_modules }}"

- name: Login as {{ admin_user.username }}
  uri:
    url: "{{ okapi_url }}/authn/login"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
    body: "{ 'username' : '{{ admin_user.username }}', 'password' : '{{ admin_user.password }}' }"
    status_code: 201
  register: mod_circulation_login
  when: auth_required

- name: Grant additional permissions to {{ admin_user.username }}
  uri:
    url: "{{ okapi_url }}/perms/users/{{ admin_user.perms_user_id }}/permissions"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: diku
      X-Okapi-Token: "{{ mod_circulation_login.x_okapi_token }}"
      Accept: application/json
    body: '{ "permissionName" : "{{ item }}" }'
    status_code: 200,422
  register: admin_perms
  changed_when: admin_perms.status == 200
  with_items: "{{ circulation_admin_permissions }}"
  when: auth_required

- name: Load loan policies
  uri:
    url: "{{ okapi_url }}/loan-policy-storage/loan-policies"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
      X-Okapi-Token: "{{ mod_circulation_login.x_okapi_token | default('token') }}"
    body: "{{ lookup('file', item) }}"
    status_code: 201, 422, 500
  register: load_loanp
  changed_when: load_loanp.status == 201
  with_fileglob:
    - loan-policies/*.json

- name: Get users for loans
  uri:
    url: "{{ okapi_url }}/users?query=active%3D%22true%22%20and%20type%3D%3Dpatron%20sortby%20personal.lastName%20personal.firstName&limit=4"
    headers:
      Accept: application/json
      X-Okapi-Tenant: diku
      X-Okapi-Token: "{{ mod_circulation_login.x_okapi_token|default('token') }}"
  register: loan_users

- name: Create loan records directory
  become: yes
  file: dest=/etc/.folio-circ_ansible/loans state=directory

- name: Copy loan records with userIds
  become: yes
  template: src={{ item }} dest=/etc/.folio-circ_ansible/{{ item }}
  with_items:
    - loans/bridget-jones-baby-item.json
    - loans/girl-on-the-train-item.json
    - loans/interesting-times-item.json
    - loans/nod-item.json

- name: Slurp loan files
  slurp: src=/etc/.folio-circ_ansible/loans/{{ item }}
  with_items:
    - bridget-jones-baby-item.json
    - girl-on-the-train-item.json
    - interesting-times-item.json
    - nod-item.json
  register: loanfiles_content

# 422 (or 500?) error means the data are already there
- name: Load loans
  uri:
    url: "{{ okapi_url }}/circulation/loans"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
      X-Okapi-Token: "{{ mod_circulation_login.x_okapi_token | default('token') }}"
    body: "{{ item.content|b64decode }}"
    status_code: 201,422,500
  register: load_loan
  changed_when: load_loan.status == 201
  with_items: "{{ loanfiles_content.results }}"

- name: Create request records directory
  become: yes
  file: dest=/etc/.folio-circ_ansible/requests state=directory
  when: load_requests == true

- name: Copy request records with userIds
  become: yes
  template: src={{ item }} dest=/etc/.folio-circ_ansible/{{ item }}
  with_items:
    - requests/interesting-times.json
    - requests/nod.json
  when: load_requests == true

- name: Slurp request files
  slurp: src=/etc/.folio-circ_ansible/requests/{{ item }}
  with_items:
    - interesting-times.json
    - nod.json
  register: requestfiles_content
  when: load_requests == true

# 422 error means the data are already there
- name: Load requests
  uri:
    url: "{{ okapi_url }}/request-storage/requests"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: diku
      Accept: application/json
      X-Okapi-Token: "{{ mod_circulation_login.x_okapi_token | default('token') }}"
    body: "{{ item.content|b64decode }}"
    status_code: 201,422,500
  register: load_request
  changed_when: load_request.status == 201
  with_items: "{{ requestfiles_content.results }}"
  when: load_requests == true
