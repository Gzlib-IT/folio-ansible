---
# Get module version
- name: Get tenant modules
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/{{ tenant }}/modules"
  register: tenant_modules

- name: Get ID of module for tenant
  set_fact:
    tenant_module_id: "{{ item.id }}"
  when: item.id is search(edge_module)
  with_items: "{{ tenant_modules.json }}"

- fail: msg="{{ edge_module }} not initialized for {{ tenant }}"
  when: tenant_module_id is not defined

- name: Get version
  set_fact:
    edge_module_version: "{{ tenant_module_id|regex_search('([0-9]+\\.[0-9]+\\.[0-9]+.*$)') }}"

# Launch container
- name: Launch container for edge module
  become: yes
  docker_container:
    name: "{{ edge_module }}-{{ edge_module_version }}"
    image: "{{ edge_docker_repo }}/{{ edge_module }}:{{ edge_module_version }}"
    docker_host: "{{ edge_docker_host }}"
    env: "{{ edge_module_docker_env }}"
    keep_volumes: no
    published_ports: "{{ edge_module_publish_port }}:{{ edge_module_expose_port }}"
    restart_policy: always
    state: started

# Set up nginx proxy
- name: Configure nginx
  become: yes
  blockinfile:
    dest: /etc/nginx/sites-available/edge
    backup: yes
    marker: "# {mark} {{ edge_module }} ANSIBLE MANAGED BLOCK"
    insertbefore: "^}\\s*$"
    block: |
      location {{ edge_module_path }} {
        proxy_pass http://{{ edge_module_host }}:{{ edge_module_publish_port }};
      }
  notify: Restart nginx

- meta: flush_handlers
